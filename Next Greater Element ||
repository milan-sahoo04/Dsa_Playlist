import java.util.*;

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        Stack<Integer> s = new Stack<>();
        int[] nextGreater = new int[n];

        // Initialize all elements as -1
        Arrays.fill(nextGreater, -1);

        // Traverse the array twice (circular behavior)
        for (int i = 2 * n - 1; i >= 0; i--) {
            int index = i % n;

            while (!s.isEmpty() && nums[s.peek()] <= nums[index]) {
                s.pop();
            }

            if (!s.isEmpty()) {
                nextGreater[index] = nums[s.peek()];
            }

            s.push(index);
        }

        return nextGreater;
    }
}
